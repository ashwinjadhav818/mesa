name: Build and Install Package from PKGBUILD

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger builds on

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Arch Linux Docker container
      run: |
        docker pull archlinux:latest
        docker run -d --name arch-builder -v ${{ github.workspace }}:/workspace -w /workspace archlinux:latest tail -f /dev/null

    - name: Install base-devel and other dependencies
      run: |
        docker exec arch-builder bash -c "pacman -Sy --noconfirm base-devel git"

    - name: Create a non-root user to run makepkg
      run: |
        docker exec arch-builder bash -c "useradd -m builder && echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"
        docker exec arch-builder bash -c "chown -R builder /workspace"

    - name: Install yay (AUR helper)
      run: |
        docker exec -u builder arch-builder bash -c "git clone https://aur.archlinux.org/yay.git /tmp/yay && cd /tmp/yay && makepkg -si --noconfirm"
        docker exec -u builder arch-builder bash -c "rm -rf /tmp/yay"

    - name: Import missing PGP keys (if necessary)
      run: |
        docker exec -u builder arch-builder bash -c "gpg --keyserver keyserver.ubuntu.com --recv-keys 8D8E31AFC32428A6 || true"

    - name: Install dependencies for the package
      run: |
        docker exec -u builder arch-builder bash -c "sudo pacman -Sy --noconfirm \
          libvdpau libva elfutils libxrandr meson ninja glslang \
          python-mako python-ply cbindgen wayland-protocols cmake \
          python-packaging python-pyaml llvm rust rust-bindgen"

        # Install directx-headers-git using yay
        docker exec -u builder arch-builder bash -c "yay -S --noconfirm directx-headers-git"

    - name: Build the package using PKGBUILD (as non-root user)
      run: |
        docker exec -u builder arch-builder bash -c "cd /workspace && makepkg -si --noconfirm"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: built-package
        path: ./*.pkg.tar.*  # Uploads any package file with possible extensions (zst, xz, gz)

    - name: Cleanup
      run: docker rm -f arch-builder
